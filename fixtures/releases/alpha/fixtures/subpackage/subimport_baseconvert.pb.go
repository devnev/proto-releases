// Code generated by protoc-gen-go-baseconvert. DO NOT EDIT.

package subpackage

import (
	subpackage "github.com/devnev/proto-releases/fixtures/subpackage"
)

func (m *ImportedNotAnnotatedAndEmpty) ToBase() *subpackage.ImportedNotAnnotatedAndEmpty {
	msg := &subpackage.ImportedNotAnnotatedAndEmpty{}
	return msg
}
func (m *ImportedNotAnnotatedAndEmpty) FromBase(b *subpackage.ImportedNotAnnotatedAndEmpty) *ImportedNotAnnotatedAndEmpty {
	if m != nil {
		m.Reset()
	} else {
		m = new(ImportedNotAnnotatedAndEmpty)
	}
	return m
}
func (m *ImportedNotAnnotatedWithUnreleasedField) ToBase() *subpackage.ImportedNotAnnotatedWithUnreleasedField {
	msg := &subpackage.ImportedNotAnnotatedWithUnreleasedField{
		Released: m.GetReleased(),
	}
	return msg
}
func (m *ImportedNotAnnotatedWithUnreleasedField) FromBase(b *subpackage.ImportedNotAnnotatedWithUnreleasedField) *ImportedNotAnnotatedWithUnreleasedField {
	if m != nil {
		m.Reset()
	} else {
		m = new(ImportedNotAnnotatedWithUnreleasedField)
	}
	m.Released = b.GetReleased()
	return m
}
func (m *ImportedNotAnnotatedWithReleasedField) ToBase() *subpackage.ImportedNotAnnotatedWithReleasedField {
	msg := &subpackage.ImportedNotAnnotatedWithReleasedField{
		Released: m.GetReleased(),
	}
	return msg
}
func (m *ImportedNotAnnotatedWithReleasedField) FromBase(b *subpackage.ImportedNotAnnotatedWithReleasedField) *ImportedNotAnnotatedWithReleasedField {
	if m != nil {
		m.Reset()
	} else {
		m = new(ImportedNotAnnotatedWithReleasedField)
	}
	m.Released = b.GetReleased()
	return m
}
