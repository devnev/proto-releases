// Code generated by protoc-gen-baseconvert. DO NOT EDIT.

package testdata

import (
	context "context"
	golden "github.com/devnev/proto-releases/testdata/golden"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

func (m *EmptyRootMessageReleased) ToBase() *golden.EmptyRootMessageReleased {
	return &golden.EmptyRootMessageReleased{}
}
func (m *EmptyRootMessageReleased) FromBase(b *golden.EmptyRootMessageReleased) {
	m.Reset()
}
func (m *EmptyRootMessagePreviewed) ToBase() *golden.EmptyRootMessagePreviewed {
	return &golden.EmptyRootMessagePreviewed{}
}
func (m *EmptyRootMessagePreviewed) FromBase(b *golden.EmptyRootMessagePreviewed) {
	m.Reset()
}
func (m *EmptyRootMessagePreviewedThenReleased) ToBase() *golden.EmptyRootMessagePreviewedThenReleased {
	return &golden.EmptyRootMessagePreviewedThenReleased{}
}
func (m *EmptyRootMessagePreviewedThenReleased) FromBase(b *golden.EmptyRootMessagePreviewedThenReleased) {
	m.Reset()
}
func (m *RootMessageNotAnnotated) ToBase() *golden.RootMessageNotAnnotated {
	return &golden.RootMessageNotAnnotated{
		Released:              m.GetReleased(),
		Previewed:             m.GetPreviewed(),
		PreviewedThenReleased: m.GetPreviewedThenReleased(),
	}
}
func (m *RootMessageNotAnnotated) FromBase(b *golden.RootMessageNotAnnotated) {
	m.Reset()
	m.Released = b.GetReleased()
	m.Previewed = b.GetPreviewed()
	m.PreviewedThenReleased = b.GetPreviewedThenReleased()
}

type BaseTestServiceserver struct {
	UnsafeTestServiceServer
	Base golden.TestServiceServer
}

func (s BaseTestServiceserver) EmptyMethodReleased(ctx context.Context, in *emptypb.Empty) (*emptypb.Empty, error) {
	return s.Base.EmptyMethodReleased(ctx, in)
}
func (s BaseTestServiceserver) MethodReleased(ctx context.Context, in *RootMessageNotAnnotated) (*RootMessageNotAnnotated, error) {
	baseIn := in.ToBase()
	baseOut, err := s.Base.MethodReleased(ctx, baseIn)
	if err != nil {
		return nil, err
	}
	out := new(RootMessageNotAnnotated)
	out.FromBase(baseOut)
	return out, nil
}
